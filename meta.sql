--practice to clean data 


--q1
--What is the average annual revenue per sector of clients that work in the sectors Insurance and Banking?


select
	CASE WHEN LOWER (sector) = 'banking' THEN 'banking'
  	WHEN LOWER (sector) = 'insurance' THEN 'insurance'
    ELSE LOWER (sector)
  END AS clin_sector
  , AVG (annual_revenue)
from meta_clients
	WHERE LOWER (sector) in ('banking', 'insurance')
GROUP BY clin_sector


--q2 
--Your manager wants to analyze the marketing spend percentage by country, but the data is not 100% clean. He mentions that you can clean the country field by using the sales team information, and shared the following mapping with you: 
--UK = United Kingdom
--FR = France
--ES = Spain
--IT = Italy
--DACH = Germany
--What is the average marketing spend percentage per country?

SELECT 
	COALESCE (country, CASE WHEN LOWER (sales_team) LIKE '%_uk_%' THEN 'United Kingdom'
  											WHEN LOWER (sales_team) LIKE '%_fr_%' THEN 'France'
    										WHEN LOWER (sales_team) LIKE '%_es_%' THEN 'Spain'
    										WHEN LOWER (sales_team) LIKE '%_it_%' THEN 'Italy'
    										WHEN LOWER (sales_team) LIKE '%_dach_%' THEN 'Germany'
    										ELSE sales_team
            					END) AS clien_country
  , AVG (marketing_spend_perc)

FROM meta_clients
GROUP BY clien_country



--q3  
-- qustion to teacher
--The data seems to be much cleaner now! Your manager is interested in comparing the revenue generated by Meta against the total marketing spend of the clients.
--What is the total marketing spend in $ (annual revenue of the client multiplied by marketing spend %) and the total revenue generated by Meta per client ID in 2022 for the cleaned up country values Spain and Italy?
--You can reuse the cleaned up country logic from question 2

SELECT mr.client_id
 	, SUM (mr.revenue) AS total_revenue
  , AVG (mc.annual_revenue*mc.marketing_spend_perc) AS marketing_spend
from meta_revenue mr 
LEFT JOIN meta_clients mc ON mr.client_id = mc.client_id
WHERE 1=1 
	AND EXTRACT (year FROM mr.dates) = 2022 
    AND COALESCE (mc.country, CASE WHEN LOWER (mc.sales_team) LIKE '%_es_%' THEN 'Spain'
    								WHEN LOWER (mc.sales_team) LIKE '%_it_%' THEN 'Italy'
    								ELSE mc.sales_team
            					END) in ('Spain', 'Italy') 
GROUP BY mr.client_id


--q4 
--Create a client list and calculate the customer penetration % for clients in 2022 with an industry that matches consumer goods.
--The customer penetration can be calculated as follows:
--Meta revenue generated in one year divided by the marketing spend $ (from question 3)
--Show the clients with the lowest customer penetration first.

SELECT mr.client_id
 	, SUM (mr.revenue) / AVG (mc.annual_revenue*mc.marketing_spend_perc) AS customer_penetrition
from meta_revenue mr 
LEFT JOIN meta_clients mc ON mr.client_id = mc.client_id
WHERE 1=1 
    AND EXTRACT (year FROM mr.dates) = 2022 
    AND (CASE WHEN lower(mc.industry) in ('consumer goods', 'consumer goods   ', 'retail & consumer goods') THEN 'retail & consumer goods'
  					ELSE lower(mc.industry)
        END) = 'retail & consumer goods'
GROUP BY mr.client_id
ORDER BY 2 ASC

--q5
--Reuse the answer of question 4.
--Clean up the industry data and calculate the customer penetration for the clients in the Retail & Consumer Goods industries based on the Meta revenue data from 2022?
--The following values should fall under Retail & Consumer Goods: retail, Retail, Consumer Goods, RCG, Retail & Consumer Goods.

SELECT mr.client_id
 	, SUM (mr.revenue) / AVG (mc.annual_revenue*mc.marketing_spend_perc) AS customer_penetrition
from meta_revenue mr 
LEFT JOIN meta_clients mc ON mr.client_id = mc.client_id
WHERE 1=1 
	AND mr.dates > '2022-01-01' 
    AND (CASE WHEN lower(mc.industry) in ('consumer goods', 'consumer goods   ',
                         'retail & consumer goods', 'retail', 'retail  ', 'rcg') 
                    THEN 'retail & consumer goods'
  			    ELSE lower(mc.industry)
        END) = 'retail & consumer goods'
GROUP BY mr.client_id


--q6
--Finally, your manager is interested in understanding how the customer penetration % of our biggest clients has changed year over year based on the changes in the revenue generated by Meta.
--We can assume that the annual revenue of the client remains consistent.
--Calculate the customer penetration % for every available year that we have Meta revenue available for for the client ID “Client_1010”

SELECT EXTRACT (year from mr.dates)
 	, SUM (mr.revenue) / AVG (mc.annual_revenue*mc.marketing_spend_perc) AS customer_penetrition
from meta_revenue mr 
LEFT JOIN meta_clients mc ON mr.client_id = mc.client_id
WHERE 1=1 
	AND mc.client_id = 'Client_1010'
GROUP BY EXTRACT (year from mr.dates)


--Question #1: 
--The clients that have a client ID with a number between 0 and 1000 are the earliest are most loyal
--Meta customers and need to be treated with the best care possible.
--Your manager wants to understand how the sales teams performed on these customers over the last years.
--What is the total revenue generated by Meta per year on clients 
--that have a client ID with a number between 0 and 1000?

WITH client_table AS (
SELECT 
	*
  , CAST (SUBSTRING (client_id, 8, 20) AS int) AS int_client
FROM meta_clients
), 

year_table AS ( 
 SELECT * 
  ,EXTRACT (year FROM dates) AS years
 FROM meta_revenue
)

SELECT 
	SUM(yt.revenue)  AS total_revenue
  ,  yt.years
FROM year_table yt
	INNER JOIN client_table ct ON ct.client_id = yt.client_id
WHERE ct.int_client  BETWEEN 0 and 1000
GROUP BY yt.years 
ORDER BY 2

--Question #2: 
--Your manager mentions that the client information of long term clients tends to not get updated 
--regularly since the clients are already in the system for such a long time. He asks you to check this.

--What is the average number of days since the client information was last updated 
--for clients that have a client ID with a number between 0 and 1000? 

--You can calculate average number of days since the client was last updated by comparing
--the current date and the last updated date.

WITH client_table AS (
SELECT 
	*
  , CAST (SUBSTRING (client_id, 8, 20) AS int) AS int_client
FROM meta_clients
) 

SELECT 
	 AVG (EXTRACT (day FROM (CURRENT_Timestamp - last_updated_date))) AS avg_days 
FROM client_table
WHERE int_client  BETWEEN 0 and 1000

--Question #3: 
--Your manager wants to compare the sales performance and the average number of days since the client
--was last updated between the long term customers and all other customers.

--What is the total revenue generated by Meta in 2022 and the average number of days since the client
--information was last updated for clients with a client ID with a number between 0 and 1000 versus all the other clients?

--total revenue 
--avg number days upd 
--0-1000 and others 

WITH client_table AS (
SELECT 
	*
  , CASE 
  		WHEN (CAST (SUBSTRING (client_id, 8, 20) AS int)) BETWEEN 0 AND 1000 THEN '0-1000'
  		ELSE 'Others'
  	END AS client_group
FROM meta_clients
) 

SELECT
	ct.client_group
	, AVG (EXTRACT (day FROM (CURRENT_Timestamp - ct.last_updated_date))) AS avg_days 
  , SUM (mr.revenue) AS total_revenue
FROM client_table ct
	INNER JOIN meta_revenue mr ON ct.client_id = mr.client_id
GROUP BY client_group


--Question #4: 
--Count how many attendees each type of offsite has had over the last few years. Create the following offsite categories:
--1. Drinks
--2. Laser tag
--3. Tennis
--4. Mario Kart
--5. Bubble Football
--6. In case there are activities missing, populate the column with “No Offsite Activity” to make sure all columns are populated.

--Make sure to clean up the data!

WITH table_mo AS (
SELECT 
  *
	,CASE 
		WHEN offsite_activity in ('Drinkssss', 'Drinks') THEN '1. Drinks'
    WHEN offsite_activity in ('Lazer Tag','Lasertag', 'Pew pew pew pew lazers') THEN '2. Laset tag'
    WHEN offsite_activity = 'Tennis' THEN '3. Tennis'
    WHEN offsite_activity = 'Mario Kart Tournament' THEN '4. Mario Kart'
    WHEN offsite_activity in ('Bubble Football','Bubble football') THEN '5. Bubble Football'
    ELSE '6. No Offsite Activity'
  END AS clean_oa
FROM meta_offsites
)

SELECT 
	 tm.clean_oa
   , COUNT (concat(first_name, '_', last_name, '_', date_of_birth)) AS attended 
   --COUNT (me.*) AS attended 
FROM table_mo tm
INNER JOIN meta_employees me ON tm.sales_team = me.sales_team
GROUP BY clean_oa
ORDER BY 1 

--Question #5: 
--During the business reviews, the leadership wants to have a holistic overview of sales performance metrics 
--and culture metrics in a single table for all sales teams.

--Show the total revenue generated in 2021 and the number of offsite activities
--each sales team has had in one table for all sales teams. 

--If offsite activities are missing, you can assume nothing happened and we should not count the activity.

WITH table_mo AS (
SELECT 
  *
	,CASE 
		WHEN offsite_activity in ('Drinkssss', 'Drinks') THEN 'Drinks'
    WHEN offsite_activity in ('Lazer Tag','Lasertag', 'Pew pew pew pew lazers') THEN 'Laset tag'
    WHEN offsite_activity = 'Tennis' THEN 'Tennis'
    WHEN offsite_activity = 'Mario Kart Tournament' THEN 'Mario Kart'
    WHEN offsite_activity in ('Bubble Football','Bubble football') THEN 'Bubble Football'
    ELSE Null  --'No Offsite Activity'
  END AS clean_oa
FROM meta_offsites
), 

temp_table AS (
SELECT 
	sales_team
  , COUNT (clean_oa) as activity
FROM table_mo 
WHERE 1=1
	AND year = 2021
 -- and clean_oa != 'No Offsite Activity'
GROUP BY sales_team
)

SELECT 
	tt.sales_team
  , activity 
  , SUM (mr.revenue) As total_revenue 
FROM temp_table tt
INNER JOIN meta_revenue mr ON tt.sales_team = mr.sales_team
WHERE EXTRACT (year FROM dates) = '2021'
--	AND tm.clean_oa != '6. No Offsite Activity'
GROUP BY tt.sales_team, tt.activity
 

--Question #6: 
-- After sharing the table with your manager, he mentions that the leadership team also wants to include
-- a metric about how clean each sales team keeps the client data.

-- Reuse the table generated in question 5 and add an additional column that shows 
-- the average number of days since the client data was updated for each sales team.

WITH table_mo AS (
SELECT 
  *
	,CASE 
		WHEN offsite_activity in ('Drinkssss', 'Drinks') THEN 'Drinks'
    WHEN offsite_activity in ('Lazer Tag','Lasertag', 'Pew pew pew pew lazers') THEN 'Laset tag'
    WHEN offsite_activity = 'Tennis' THEN 'Tennis'
    WHEN offsite_activity = 'Mario Kart Tournament' THEN 'Mario Kart'
    WHEN offsite_activity in ('Bubble Football','Bubble football') THEN 'Bubble Football'
    ELSE Null  --'No Offsite Activity'
  END AS clean_oa
FROM meta_offsites
), 

temp_table AS (
SELECT 
	sales_team
  , COUNT (clean_oa) as activity
FROM table_mo 
WHERE 1=1
	AND year = 2021
 -- and clean_oa != 'No Offsite Activity'
GROUP BY sales_team
),

temp_table_2 AS (
 SELECT 
	tt.sales_team
  , activity 
  , SUM (mr.revenue) As total_revenue  
FROM temp_table tt
INNER JOIN meta_revenue mr ON tt.sales_team = mr.sales_team
WHERE EXTRACT (year FROM dates) = '2021'
--	AND tm.clean_oa != '6. No Offsite Activity'
GROUP BY tt.sales_team, tt.activity
)

SELECT 
	tt2.*
	, AVG (EXTRACT (day FROM (CURRENT_Timestamp - mc.last_updated_date))) AS avg_days
FROM temp_table_2 tt2
INNER JOIN meta_clients mc ON tt2.sales_team = mc.sales_team
GROuP BY tt2.sales_team, tt2.activity, tt2.total_revenue



SELECT CONCAT(column1, ' ', column2) AS concatenated_result
FROM your_table
WHERE your_condition; 









WITH meta_emp_new as (
  select
    concat(first_name, '_', last_name, '_', date_of_birth) as cust_comp_key
  from meta_employees
)

select count(distinct cust_comp_key), count(cust_comp_key) from meta_emp_new


SELECT DISTINCT offsite_activity FROM meta_offsites

SELECT 
	last_name
  , first_name 
--  , COUNT (*)
--	COUNT (DISTINCT last_name) as ln
--  ,COUNT (DISTINCT first_name) AS fn
FROM meta_employees
GROUP BY 	last_name
  , first_name 
SELECT * FROM meta_employees